<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="dirent_8h" kind="file" language="C++">
    <compoundname>dirent.h</compoundname>
    <includedby refid="_generic_func_8cpp" local="yes">GenericFunc.cpp</includedby>
    <invincdepgraph>
      <node id="37">
        <label>GenericFunc.cpp</label>
        <link refid="_generic_func_8cpp"/>
      </node>
      <node id="36">
        <label>dirent.h</label>
        <link refid="dirent_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="dirent_8h_1a4fa796460f38104052159df94e89d209" prot="public" static="no">
        <name>DIRENT_H_INCLUDED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dirent.h" line="83" column="17" bodyfile="dirent.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>uce-dirent.h<sp/>-<sp/>operating<sp/>system<sp/>independent<sp/>dirent<sp/>implementation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1998-2002<sp/><sp/>Toni<sp/>Ronkko</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>``Software&apos;&apos;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>``AS<sp/>IS&apos;&apos;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>TONI<sp/>RONKKO<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>May<sp/>28<sp/>1998,<sp/>Toni<sp/>Ronkko<sp/>&lt;tronkko@messi.uku.fi&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>uce-dirent.h,v<sp/>1.7<sp/>2002/05/13<sp/>10:48:35<sp/>tr<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>$Log:<sp/>uce-dirent.h,v<sp/>$</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.7<sp/><sp/>2002/05/13<sp/>10:48:35<sp/><sp/>tr</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>embedded<sp/>some<sp/>source<sp/>code<sp/>directly<sp/>to<sp/>the<sp/>header<sp/>so<sp/>that<sp/>no<sp/>source</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>modules<sp/>need<sp/>to<sp/>be<sp/>included<sp/>in<sp/>the<sp/>MS<sp/>Visual<sp/>C<sp/>project<sp/>using<sp/>the</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>interface,<sp/>removed<sp/>all<sp/>the<sp/>dependencies<sp/>to<sp/>other<sp/>headers<sp/>of<sp/>the<sp/>`uce&apos;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>library<sp/>so<sp/>that<sp/>the<sp/>header<sp/>can<sp/>be<sp/>made<sp/>public</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.6<sp/><sp/>2002/04/12<sp/>16:22:04<sp/><sp/>tr</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>Unified<sp/>Compiling<sp/>Environment<sp/>(UCE)<sp/>replaced<sp/>`std&apos;<sp/>library</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.5<sp/><sp/>2001/07/20<sp/>16:33:40<sp/><sp/>tr</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>moved<sp/>to<sp/>`std&apos;<sp/>library<sp/>and<sp/>re-named<sp/>defines<sp/>accordingly</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.4<sp/><sp/>2001/07/10<sp/>16:47:18<sp/><sp/>tronkko</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>revised<sp/>comments</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.3<sp/><sp/>2001/01/11<sp/>13:16:43<sp/><sp/>tr</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>using<sp/>``uce-machine.h&apos;&apos;<sp/>for<sp/>finding<sp/>out<sp/>defines<sp/>such<sp/>as<sp/>`FREEBSD&apos;</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.2<sp/><sp/>2000/10/08<sp/>16:00:41<sp/><sp/>tr</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>copy<sp/>of<sp/>FreeBSD<sp/>man<sp/>page</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.1<sp/><sp/>2000/07/10<sp/>05:53:16<sp/><sp/>tr</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>Initial<sp/>revision</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.2<sp/><sp/>1998/07/19<sp/>18:29:14<sp/><sp/>tr</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Added<sp/>error<sp/>reporting<sp/>capabilities<sp/>and<sp/>some<sp/>asserts.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.1<sp/><sp/>1998/07/04<sp/>16:27:51<sp/><sp/>tr</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>Initial<sp/>revision</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>MSVC<sp/>1.0<sp/>scans<sp/>automatic<sp/>dependencies<sp/>incorrectly<sp/>when<sp/>your<sp/>project</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>contains<sp/>this<sp/>very<sp/>header.<sp/><sp/>The<sp/>problem<sp/>is<sp/>that<sp/>MSVC<sp/>cannot<sp/>handle</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>include<sp/>directives<sp/>inside<sp/>#if..#endif<sp/>block<sp/>those<sp/>are<sp/>never<sp/>entered.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>Since<sp/>this<sp/>header<sp/>ought<sp/>to<sp/>compile<sp/>in<sp/>many<sp/>different<sp/>operating<sp/>systems,</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>there<sp/>had<sp/>to<sp/>be<sp/>several<sp/>conditional<sp/>blocks<sp/>that<sp/>are<sp/>compiled<sp/>only<sp/>in</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>operating<sp/>systems<sp/>for<sp/>what<sp/>they<sp/>were<sp/>designed<sp/>for.<sp/><sp/>MSVC<sp/>1.0<sp/>cannot</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>handle<sp/>inclusion<sp/>of<sp/>sys/dir.h<sp/>in<sp/>a<sp/>part<sp/>that<sp/>is<sp/>compiled<sp/>only<sp/>in<sp/>Apollo</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>operating<sp/>system.<sp/><sp/>To<sp/>fix<sp/>the<sp/>problem<sp/>you<sp/>need<sp/>to<sp/>insert<sp/>DIR.H<sp/>into</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>SYSINCL.DAT<sp/>located<sp/>in<sp/>MSVC\BIN<sp/>directory<sp/>and<sp/>restart<sp/>visual<sp/>C++.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>Consult<sp/>manuals<sp/>for<sp/>more<sp/>informaton<sp/>about<sp/>the<sp/>problem.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>Since<sp/>many<sp/>UNIX<sp/>systems<sp/>have<sp/>dirent.h<sp/>we<sp/>assume<sp/>to<sp/>have<sp/>one<sp/>also.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>However,<sp/>if<sp/>your<sp/>UNIX<sp/>system<sp/>does<sp/>not<sp/>have<sp/>dirent.h<sp/>you<sp/>can<sp/>download<sp/>one</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>for<sp/>example<sp/>at:<sp/>http://ftp.uni-mannheim.de/ftp/GNU/dirent/dirent.tar.gz.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>also<sp/>see<sp/>if<sp/>you<sp/>have<sp/>one<sp/>of<sp/>dirent.h,<sp/>direct.h,<sp/>dir.h,<sp/>ndir.h,</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>sys/dir.h<sp/>and<sp/>sys/ndir.h<sp/>somewhere.<sp/><sp/>Try<sp/>defining<sp/>HAVE_DIRENT_H,</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>HAVE_DIRECT_H,<sp/>HAVE_DIR_H,<sp/>HAVE_NDIR_H,<sp/>HAVE_SYS_DIR_H<sp/>and</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>HAVE_SYS_NDIR_H<sp/>according<sp/>to<sp/>the<sp/>files<sp/>found.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DIRENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIRENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="dirent_8h_1a4fa796460f38104052159df94e89d209" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIRENT_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>find<sp/>out<sp/>platform<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MSDOS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MS-DOS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__MSDOS__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Turbo<sp/>C/Borland<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>MSDOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__DOS__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Watcom<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>MSDOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MS-Windows<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__NT__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Watcom<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_WIN32)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Microsoft<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__WIN32__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Borland<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>See<sp/>what<sp/>kind<sp/>of<sp/>dirent<sp/>interface<sp/>we<sp/>have<sp/>unless<sp/>autoconf<sp/>has<sp/>already</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>determinated<sp/>that.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(HAVE_DIRENT_H)<sp/>&amp;&amp;<sp/>!defined(HAVE_DIRECT_H)<sp/>&amp;&amp;<sp/>!defined(HAVE_SYS_DIR_H)<sp/>&amp;&amp;<sp/>!defined(HAVE_NDIR_H)<sp/>&amp;&amp;<sp/>!defined(HAVE_SYS_NDIR_H)<sp/>&amp;&amp;<sp/>!defined(HAVE_DIR_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(_MSC_VER)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Microsoft<sp/>C/C++<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>dirent.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__BORLANDC__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Borland<sp/>C/C++<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>HAVE_DIRENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>VOID_CLOSEDIR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__TURBOC__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Borland<sp/>Turbo<sp/>C<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>dirent.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__WATCOMC__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Watcom<sp/>C/C++<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>HAVE_DIRECT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__apollo)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Apollo<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>HAVE_SYS_DIR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__hpux)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HP-UX<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>HAVE_DIRENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__alpha)<sp/>||<sp/>defined(__alpha__)<sp/><sp/></highlight><highlight class="comment">/*<sp/>Alpha<sp/>OSF1<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>error<sp/>&quot;not<sp/>implemented&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__sgi)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Silicon<sp/>Graphics<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>HAVE_DIRENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(sun)<sp/>||<sp/>defined(_sun)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sun<sp/>Solaris<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>HAVE_DIRENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__FreeBSD__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FreeBSD<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>HAVE_DIRENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__linux__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Linux<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>HAVE_DIRENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__GNUC__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GNU<sp/>C/C++<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>HAVE_DIRENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>error<sp/>&quot;not<sp/>implemented&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>include<sp/>proper<sp/>interface<sp/>headers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_DIRENT_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;<ref refid="dirent_8h" kindref="compound">dirent.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>FREEBSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>NAMLEN(dp)<sp/>((int)((dp)-&gt;d_namlen))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>NAMLEN(dp)<sp/>((int)(strlen((dp)-&gt;d_name)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HAVE_NDIR_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;ndir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>NAMLEN(dp)<sp/>((int)((dp)-&gt;d_namlen))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HAVE_SYS_NDIR_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;sys/ndir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>NAMLEN(dp)<sp/>((int)((dp)-&gt;d_namlen))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HAVE_DIRECT_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;direct.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>NAMLEN(dp)<sp/>((int)((dp)-&gt;d_namlen))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HAVE_DIR_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;dir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>NAMLEN(dp)<sp/>((int)((dp)-&gt;d_namlen))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HAVE_SYS_DIR_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;sys/dir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>dirent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>dirent<sp/>direct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>NAMLEN(dp)<sp/>((int)((dp)-&gt;d_namlen))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(MSDOS)<sp/>||<sp/>defined(WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>figure<sp/>out<sp/>type<sp/>of<sp/>underlaying<sp/>directory<sp/>interface<sp/>to<sp/>be<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>DIRENT_WIN32_INTERFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(MSDOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>DIRENT_MSDOS_INTERFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>error<sp/>&quot;missing<sp/>native<sp/>dirent<sp/>interface&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/***<sp/>WIN32<sp/>specifics<sp/>***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(DIRENT_WIN32_INTERFACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>!defined(DIRENT_MAXNAMLEN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>DIRENT_MAXNAMLEN<sp/>(MAX_PATH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/***<sp/>MS-DOS<sp/>specifics<sp/>***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(DIRENT_MSDOS_INTERFACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&lt;dos.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Borland<sp/>defines<sp/>file<sp/>length<sp/>macros<sp/>in<sp/>dir.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>defined(__BORLANDC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>include<sp/>&lt;dir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>if<sp/>!defined(DIRENT_MAXNAMLEN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>DIRENT_MAXNAMLEN<sp/>((MAXFILE)+(MAXEXT))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>if<sp/>!defined(_find_t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>_find_t<sp/>find_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Turbo<sp/>C<sp/>defines<sp/>ffblk<sp/>structure<sp/>in<sp/>dir.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>elif<sp/>defined(__TURBOC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>include<sp/>&lt;dir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>if<sp/>!defined(DIRENT_MAXNAMLEN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>DIRENT_MAXNAMLEN<sp/>((MAXFILE)+(MAXEXT))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>define<sp/>DIRENT_USE_FFBLK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MSVC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>if<sp/>!defined(DIRENT_MAXNAMLEN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>DIRENT_MAXNAMLEN<sp/>(12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Watcom<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>elif<sp/>defined(__WATCOMC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>if<sp/>!defined(DIRENT_MAXNAMLEN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>defined(__OS2__)<sp/>||<sp/>defined(__NT__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>DIRENT_MAXNAMLEN<sp/>(255)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>DIRENT_MAXNAMLEN<sp/>(12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/***<sp/>generic<sp/>MS-DOS<sp/>and<sp/>MS-Windows<sp/>stuff<sp/>***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>!defined(NAME_MAX)<sp/>&amp;&amp;<sp/>defined(DIRENT_MAXNAMLEN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>NAME_MAX<sp/>DIRENT_MAXNAMLEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>NAME_MAX<sp/>&lt;<sp/>DIRENT_MAXNAMLEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>error<sp/>&quot;assertion<sp/>failed:<sp/>NAME_MAX<sp/>&gt;=<sp/>DIRENT_MAXNAMLEN&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Substitute<sp/>for<sp/>real<sp/>dirent<sp/>structure.<sp/><sp/>Note<sp/>that<sp/>`d_name&apos;<sp/>field<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/>*<sp/>true<sp/>character<sp/>array<sp/>although<sp/>we<sp/>have<sp/>it<sp/>copied<sp/>in<sp/>the<sp/>implementation</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/>*<sp/>dependent<sp/>data.<sp/><sp/>We<sp/>could<sp/>save<sp/>some<sp/>memory<sp/>if<sp/>we<sp/>had<sp/>declared<sp/>`d_name&apos;</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/>*<sp/>as<sp/>a<sp/>pointer<sp/>refering<sp/>the<sp/>name<sp/>within<sp/>implementation<sp/>dependent<sp/>data.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/>*<sp/>We<sp/>have<sp/>not<sp/>done<sp/>that<sp/>since<sp/>some<sp/>code<sp/>may<sp/>rely<sp/>on<sp/>sizeof(d_name)<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/>*<sp/>something<sp/>other<sp/>than<sp/>four.<sp/><sp/>Besides,<sp/>directory<sp/>entries<sp/>are<sp/>typically<sp/>so</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/>*<sp/>small<sp/>that<sp/>it<sp/>takes<sp/>virtually<sp/>no<sp/>time<sp/>to<sp/>copy<sp/>them<sp/>from<sp/>place<sp/>to<sp/>place.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>d_name[NAME_MAX<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/***<sp/>Operating<sp/>system<sp/>specific<sp/>part<sp/>***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(DIRENT_WIN32_INTERFACE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*WIN32*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>WIN32_FIND_DATA<sp/>data;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(DIRENT_MSDOS_INTERFACE)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*MSDOS*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>defined(DIRENT_USE_FFBLK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ffblk<sp/>data;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_find_t<sp/>data;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}<sp/>dirent;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DIR<sp/>substitute<sp/>structure<sp/>containing<sp/>directory<sp/>name.<sp/><sp/>The<sp/>name<sp/>is</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/>*<sp/>essential<sp/>for<sp/>the<sp/>operation<sp/>of<sp/>``rewinndir&apos;&apos;<sp/>function.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DIR<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dirname;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>directory<sp/>being<sp/>scanned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>dirent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirent_filled;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>current<sp/>un-processed?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/***<sp/>Operating<sp/>system<sp/>specific<sp/>part<sp/>***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>defined(DIRENT_WIN32_INTERFACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search_handle;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>elif<sp/>defined(DIRENT_MSDOS_INTERFACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}<sp/>DIR;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>supply<sp/>prototypes<sp/>for<sp/>dirent<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DIR<sp/>*opendir<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirname);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*readdir<sp/>(DIR<sp/>*dirp);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>closedir<sp/>(DIR<sp/>*dirp);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rewinddir<sp/>(DIR<sp/>*dirp);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>Implement<sp/>dirent<sp/>interface<sp/>as<sp/>static<sp/>functions<sp/>so<sp/>that<sp/>the<sp/>user<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>need<sp/>to<sp/>change<sp/>his<sp/>project<sp/>in<sp/>any<sp/>way<sp/>to<sp/>use<sp/>dirent<sp/>function.<sp/><sp/>With<sp/>this</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>it<sp/>is<sp/>sufficient<sp/>to<sp/>include<sp/>this<sp/>very<sp/>header<sp/>from<sp/>source<sp/>modules<sp/>using</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/>dirent<sp/>functions<sp/>and<sp/>the<sp/>functions<sp/>will<sp/>be<sp/>pulled<sp/>in<sp/>automatically.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>use<sp/>ffblk<sp/>instead<sp/>of<sp/>_find_t<sp/>if<sp/>requested<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DIRENT_USE_FFBLK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_A_ARCH<sp/><sp/><sp/>(FA_ARCH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_A_HIDDEN<sp/>(FA_HIDDEN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_A_NORMAL<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_A_RDONLY<sp/>(FA_RDONLY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_A_SUBDIR<sp/>(FA_DIREC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_A_SYSTEM<sp/>(FA_SYSTEM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_A_VOLID<sp/><sp/>(FA_LABEL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_dos_findnext(dest)<sp/>findnext(dest)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>_dos_findfirst(name,flags,dest)<sp/>findfirst(name,dest,flags)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_initdir<sp/>(DIR<sp/>*p);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_getdirname<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dirent<sp/>*dp);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_setdirname<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>DIR<sp/>*dirp);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>&lt;function<sp/>name=&quot;opendir&quot;&gt;</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>&lt;intro&gt;open<sp/>directory<sp/>stream<sp/>for<sp/>reading</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>&lt;syntax&gt;DIR<sp/>*opendir<sp/>(const<sp/>char<sp/>*dirname);</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>&lt;desc&gt;Open<sp/>named<sp/>directory<sp/>stream<sp/>for<sp/>read<sp/>and<sp/>return<sp/>pointer<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>internal<sp/>working<sp/>area<sp/>that<sp/>is<sp/>used<sp/>for<sp/>retrieving<sp/>individual<sp/>directory</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>entries.<sp/><sp/>The<sp/>internal<sp/>working<sp/>area<sp/>has<sp/>no<sp/>fields<sp/>of<sp/>your<sp/>interest.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*<sp/>&lt;ret&gt;Returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>internal<sp/>working<sp/>area<sp/>or<sp/>NULL<sp/>in<sp/>case<sp/>the<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/>directory<sp/>stream<sp/>could<sp/>not<sp/>be<sp/>opened.<sp/><sp/>Global<sp/>`errno&apos;<sp/>variable<sp/>will<sp/>set</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>in<sp/>case<sp/>of<sp/>error<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>&lt;table&gt;</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>[EACESS<sp/><sp/>|Permission<sp/>denied.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>[EMFILE<sp/><sp/>|Too<sp/>many<sp/>open<sp/>files<sp/>used<sp/>by<sp/>the<sp/>process.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>[ENFILE<sp/><sp/>|Too<sp/>many<sp/>open<sp/>files<sp/>in<sp/>system.</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*<sp/>[ENOENT<sp/><sp/>|Directory<sp/>does<sp/>not<sp/>exist.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/>[ENOMEM<sp/><sp/>|Insufficient<sp/>memory.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*<sp/>[ENOTDIR<sp/>|dirname<sp/>does<sp/>not<sp/>refer<sp/>to<sp/>directory.<sp/><sp/>This<sp/>value<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reliable<sp/>on<sp/>MS-DOS<sp/>and<sp/>MS-Windows<sp/>platforms.<sp/><sp/>Many</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>implementations<sp/>return<sp/>ENOENT<sp/>even<sp/>when<sp/>the<sp/>name<sp/>refers<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.]</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>&lt;/table&gt;</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>&lt;/function&gt;</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DIR<sp/>*</highlight></codeline>
<codeline lineno="343"><highlight class="normal">opendir(</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirname)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>DIR<sp/>*dirp;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>assert<sp/>(dirname<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>dirp<sp/>=<sp/>(DIR*)malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>DIR));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirp<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>room<sp/>for<sp/>directory<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>dirp-&gt;dirname<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>malloc<sp/>(strlen<sp/>(dirname)<sp/>+<sp/>1<sp/>+<sp/>strlen<sp/>(</highlight><highlight class="stringliteral">&quot;\\*.*&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirp-&gt;dirname<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>failed<sp/>to<sp/>duplicate<sp/>directory<sp/>name.<sp/><sp/>errno<sp/>set<sp/>by<sp/>malloc()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(dirp);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>directory<sp/>name<sp/>while<sp/>appending<sp/>directory<sp/>separator<sp/>and<sp/>&quot;*.*&quot;.</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Directory<sp/>separator<sp/>is<sp/>not<sp/>appended<sp/>if<sp/>the<sp/>name<sp/>already<sp/>ends<sp/>with</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>drive<sp/>or<sp/>directory<sp/>separator.<sp/><sp/>Directory<sp/>separator<sp/>is<sp/>assumed<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>&apos;/&apos;<sp/>or<sp/>&apos;\&apos;<sp/>and<sp/>drive<sp/>separator<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>&apos;:&apos;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(dirp-&gt;dirname,<sp/>dirname);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>strchr<sp/>(dirp-&gt;dirname,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirp-&gt;dirname<sp/>&lt;<sp/>p<sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(p<sp/>-<sp/>1)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/><sp/>&amp;&amp;<sp/><sp/>*(p<sp/>-<sp/>1)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/><sp/>&amp;&amp;<sp/><sp/>*(p<sp/>-<sp/>1)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy<sp/>(p++,<sp/></highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>DIRENT_WIN32_INTERFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(p,<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*scan<sp/>files<sp/>with<sp/>and<sp/>without<sp/>extension<sp/>in<sp/>win32*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(p,<sp/></highlight><highlight class="stringliteral">&quot;*.*&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*scan<sp/>files<sp/>with<sp/>and<sp/>without<sp/>extension<sp/>in<sp/>DOS*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>open<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_initdir<sp/>(dirp)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialization<sp/>failed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(dirp-&gt;dirname);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(dirp);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dirp;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/>&lt;function<sp/>name=&quot;readdir&quot;&gt;</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>&lt;intro&gt;read<sp/>a<sp/>directory<sp/>entry</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*<sp/>&lt;syntax&gt;struct<sp/>dirent<sp/>*readdir<sp/>(DIR<sp/>*dirp);</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*<sp/>&lt;desc&gt;Read<sp/>individual<sp/>directory<sp/>entry<sp/>and<sp/>return<sp/>pointer<sp/>to<sp/>a<sp/>structure</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*<sp/>containing<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entry.<sp/><sp/>Individual<sp/>directory<sp/>entries<sp/>returned</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>include<sp/>normal<sp/>files,<sp/>sub-directories,<sp/>pseudo-directories<sp/>&quot;.&quot;<sp/>and<sp/>&quot;..&quot;</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>and<sp/>also<sp/>volume<sp/>labels,<sp/>hidden<sp/>files<sp/>and<sp/>system<sp/>files<sp/>in<sp/>MS-DOS<sp/>and</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/>MS-Windows.<sp/><sp/><sp/>You<sp/>might<sp/>want<sp/>to<sp/>use<sp/>stat(2)<sp/>function<sp/>to<sp/>determinate<sp/>which</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*<sp/>one<sp/>are<sp/>you<sp/>dealing<sp/>with.<sp/><sp/>Many<sp/>dirent<sp/>implementations<sp/>already<sp/>contain</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/>equivalent<sp/>information<sp/>in<sp/>dirent<sp/>structure<sp/>but<sp/>you<sp/>cannot<sp/>depend<sp/>on</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>this.</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*<sp/>The<sp/>dirent<sp/>structure<sp/>contains<sp/>several<sp/>system<sp/>dependent<sp/>fields<sp/>that</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*<sp/>generally<sp/>have<sp/>no<sp/>interest<sp/>to<sp/>you.<sp/><sp/>The<sp/>only<sp/>interesting<sp/>one<sp/>is<sp/>char</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*<sp/>d_name[]<sp/>that<sp/>is<sp/>also<sp/>portable<sp/>across<sp/>different<sp/>systems.<sp/><sp/>The<sp/>d_name</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/>field<sp/>contains<sp/>the<sp/>name<sp/>of<sp/>the<sp/>directory<sp/>entry<sp/>without<sp/>leading<sp/>path.</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*<sp/>While<sp/>d_name<sp/>is<sp/>portable<sp/>across<sp/>different<sp/>systems<sp/>the<sp/>actual<sp/>storage</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/>capacity<sp/>of<sp/>d_name<sp/>varies<sp/>from<sp/>system<sp/>to<sp/>system<sp/>and<sp/>there<sp/>is<sp/>no<sp/>portable</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*<sp/>way<sp/>to<sp/>find<sp/>out<sp/>it<sp/>at<sp/>compile<sp/>time<sp/>as<sp/>different<sp/>systems<sp/>define<sp/>the</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/>capacity<sp/>of<sp/>d_name<sp/>with<sp/>different<sp/>macros<sp/>and<sp/>some<sp/>systems<sp/>do<sp/>not<sp/>define</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*<sp/>capacity<sp/>at<sp/>all<sp/>(besides<sp/>actual<sp/>declaration<sp/>of<sp/>the<sp/>field).<sp/>If<sp/>you<sp/>really</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>need<sp/>to<sp/>find<sp/>out<sp/>storage<sp/>capacity<sp/>of<sp/>d_name<sp/>then<sp/>you<sp/>might<sp/>want<sp/>to<sp/>try</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*<sp/>NAME_MAX<sp/>macro.<sp/>The<sp/>NAME_MAX<sp/>is<sp/>defined<sp/>in<sp/>POSIX<sp/>standard<sp/>althought</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/>there<sp/>are<sp/>many<sp/>MS-DOS<sp/>and<sp/>MS-Windows<sp/>implementations<sp/>those<sp/>do<sp/>not<sp/>define</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*<sp/>it.<sp/><sp/>There<sp/>are<sp/>also<sp/>systems<sp/>that<sp/>declare<sp/>d_name<sp/>as<sp/>&quot;char<sp/>d_name[1]&quot;<sp/>and</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*<sp/>then<sp/>allocate<sp/>suitable<sp/>amount<sp/>of<sp/>memory<sp/>at<sp/>run-time.<sp/><sp/>Thanks<sp/>to<sp/>Alain</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/>Decamps<sp/>(Alain.Decamps@advalvas.be)<sp/>for<sp/>pointing<sp/>it<sp/>out<sp/>to<sp/>me.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*<sp/>This<sp/>all<sp/>leads<sp/>to<sp/>the<sp/>fact<sp/>that<sp/>it<sp/>is<sp/>difficult<sp/>to<sp/>allocate<sp/>space</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*<sp/>for<sp/>the<sp/>directory<sp/>names<sp/>when<sp/>the<sp/>very<sp/>same<sp/>program<sp/>is<sp/>being<sp/>compiled<sp/>on</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*<sp/>number<sp/>of<sp/>operating<sp/>systems.<sp/><sp/>Therefore<sp/>I<sp/>suggest<sp/>that<sp/>you<sp/>always</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/>allocate<sp/>space<sp/>for<sp/>directory<sp/>names<sp/>dynamically.</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/>&lt;ret&gt;</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*<sp/>Returns<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>structure<sp/>containing<sp/>name<sp/>of<sp/>the<sp/>directory<sp/>entry</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*<sp/>in<sp/>`d_name&apos;<sp/>field<sp/>or<sp/>NULL<sp/>if<sp/>there<sp/>was<sp/>an<sp/>error.<sp/><sp/>In<sp/>case<sp/>of<sp/>an<sp/>error<sp/>the</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/>global<sp/>`errno&apos;<sp/>variable<sp/>will<sp/>set<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*<sp/>&lt;table&gt;</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*<sp/>[EBADF<sp/><sp/>|dir<sp/>parameter<sp/>refers<sp/>to<sp/>an<sp/>invalid<sp/>directory<sp/>stream.<sp/><sp/>This<sp/>value</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>not<sp/>set<sp/>reliably<sp/>on<sp/>all<sp/>implementations.]</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/>&lt;/table&gt;</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*<sp/>&lt;/function&gt;</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*</highlight></codeline>
<codeline lineno="436"><highlight class="normal">readdir<sp/>(DIR<sp/>*dirp)</highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>assert<sp/>(dirp<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirp<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DIRENT_WIN32_INTERFACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirp-&gt;search_handle<sp/>==<sp/>INVALID_HANDLE_VALUE)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>directory<sp/>stream<sp/>was<sp/>opened/rewound<sp/>incorrectly<sp/>or<sp/>it<sp/>ended<sp/>normally<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirp-&gt;dirent_filled<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Directory<sp/>entry<sp/>has<sp/>already<sp/>been<sp/>retrieved<sp/>and<sp/>there<sp/>is<sp/>no<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>retrieve<sp/>a<sp/>new<sp/>one.<sp/><sp/>Directory<sp/>entry<sp/>will<sp/>be<sp/>retrieved<sp/>in<sp/>advance</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>when<sp/>the<sp/>user<sp/>calls<sp/>readdir<sp/>function<sp/>for<sp/>the<sp/>first<sp/>time.<sp/><sp/>This<sp/>is<sp/>so</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>because<sp/>real<sp/>dirent<sp/>has<sp/>separate<sp/>functions<sp/>for<sp/>opening<sp/>and<sp/>reading</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>stream<sp/>whereas<sp/>Win32<sp/>and<sp/>DOS<sp/>dirents<sp/>open<sp/>the<sp/>stream</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>automatically<sp/>when<sp/>we<sp/>retrieve<sp/>the<sp/>first<sp/>file.<sp/><sp/>Therefore,<sp/>we<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>save<sp/>the<sp/>first<sp/>file<sp/>when<sp/>opening<sp/>the<sp/>stream<sp/>and<sp/>later<sp/>we<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>return<sp/>the<sp/>saved<sp/>entry<sp/>when<sp/>the<sp/>user<sp/>tries<sp/>to<sp/>read<sp/>the<sp/>first<sp/>entry.</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>dirp-&gt;dirent_filled<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>in<sp/>entry<sp/>and<sp/>return<sp/>that<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DIRENT_WIN32_INTERFACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FindNextFile<sp/>(dirp-&gt;search_handle,<sp/>&amp;dirp-&gt;current.data)<sp/>==<sp/>FALSE)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Last<sp/>file<sp/>has<sp/>been<sp/>processed<sp/>or<sp/>an<sp/>error<sp/>occured<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FindClose<sp/>(dirp-&gt;search_handle);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dirp-&gt;search_handle<sp/>=<sp/>INVALID_HANDLE_VALUE;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOENT;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(DIRENT_MSDOS_INTERFACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dos_findnext<sp/>(&amp;dirp-&gt;current.data)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_dos_findnext<sp/>and<sp/>findnext<sp/>will<sp/>set<sp/>errno<sp/>to<sp/>ENOENT<sp/>when<sp/>no</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>more<sp/>entries<sp/>could<sp/>be<sp/>retrieved.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>_setdirname<sp/>(dirp);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(dirp-&gt;dirent_filled<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;dirp-&gt;current;</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*<sp/>&lt;function<sp/>name=&quot;closedir&quot;&gt;</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*<sp/>&lt;intro&gt;close<sp/>directory<sp/>stream.</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*<sp/>&lt;syntax&gt;int<sp/>closedir<sp/>(DIR<sp/>*dirp);</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*<sp/>&lt;desc&gt;Close<sp/>directory<sp/>stream<sp/>opened<sp/>by<sp/>the<sp/>`opendir&apos;<sp/>function.<sp/><sp/>Close<sp/>of</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>*<sp/>directory<sp/>stream<sp/>invalidates<sp/>the<sp/>DIR<sp/>structure<sp/>as<sp/>well<sp/>as<sp/>previously<sp/>read</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*<sp/>dirent<sp/>entry.</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>*<sp/>&lt;ret&gt;The<sp/>function<sp/>typically<sp/>returns<sp/>0<sp/>on<sp/>success<sp/>and<sp/>-1<sp/>on<sp/>failure<sp/>but</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*<sp/>the<sp/>function<sp/>may<sp/>be<sp/>declared<sp/>to<sp/>return<sp/>void<sp/>on<sp/>same<sp/>systems.<sp/><sp/>At<sp/>least</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*<sp/>Borland<sp/>C/C++<sp/>and<sp/>some<sp/>UNIX<sp/>implementations<sp/>use<sp/>void<sp/>as<sp/>a<sp/>return<sp/>type.</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*<sp/>The<sp/>dirent<sp/>wrapper<sp/>tries<sp/>to<sp/>define<sp/>VOID_CLOSEDIR<sp/>whenever<sp/>closedir<sp/>is</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*<sp/>known<sp/>to<sp/>return<sp/>nothing.<sp/><sp/>The<sp/>very<sp/>same<sp/>definition<sp/>is<sp/>made<sp/>by<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>*<sp/>autoconf<sp/>if<sp/>you<sp/>happen<sp/>to<sp/>use<sp/>it.</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*<sp/>The<sp/>global<sp/>`errno&apos;<sp/>variable<sp/>will<sp/>set<sp/>to<sp/>EBADF<sp/>in<sp/>case<sp/>of<sp/>error.</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>*<sp/>&lt;/function&gt;</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">closedir<sp/>(DIR<sp/>*dirp)</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retcode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>that<sp/>dirp<sp/>points<sp/>to<sp/>legal<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>assert<sp/>(dirp<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirp<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>directory<sp/>name<sp/>and<sp/>search<sp/>handles<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirp-&gt;dirname<sp/>!=<sp/>NULL)<sp/>free<sp/>(dirp-&gt;dirname);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DIRENT_WIN32_INTERFACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirp-&gt;search_handle<sp/>!=<sp/>INVALID_HANDLE_VALUE)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FindClose<sp/>(dirp-&gt;search_handle)<sp/>==<sp/>FALSE)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unknown<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retcode<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>dirp<sp/>structure<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>it<sp/>cannot<sp/>be<sp/>used<sp/>anymore*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>memset<sp/>(dirp,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(*dirp));</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(DIRENT_WIN32_INTERFACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>dirp-&gt;search_handle<sp/>=<sp/>INVALID_HANDLE_VALUE;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>free<sp/>(dirp);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retcode;</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/>*<sp/>&lt;function<sp/>name=&quot;rewinddir&quot;&gt;</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/>*<sp/>&lt;intro&gt;rewind<sp/>directory<sp/>stream<sp/>to<sp/>the<sp/>beginning</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/>*<sp/>&lt;syntax&gt;void<sp/>rewinddir<sp/>(DIR<sp/>*dirp);</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/>*<sp/>&lt;desc&gt;Rewind<sp/>directory<sp/>stream<sp/>to<sp/>the<sp/>beginning<sp/>so<sp/>that<sp/>the<sp/>next<sp/>call<sp/>of</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*<sp/>readdir()<sp/>returns<sp/>the<sp/>very<sp/>first<sp/>directory<sp/>entry<sp/>again.<sp/><sp/>However,<sp/>note</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*<sp/>that<sp/>next<sp/>call<sp/>of<sp/>readdir()<sp/>may<sp/>not<sp/>return<sp/>the<sp/>same<sp/>directory<sp/>entry<sp/>as<sp/>it</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*<sp/>did<sp/>in<sp/>first<sp/>time.<sp/><sp/>The<sp/>directory<sp/>stream<sp/>may<sp/>have<sp/>been<sp/>affected<sp/>by<sp/>newly</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*<sp/>created<sp/>files.</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>*<sp/>Almost<sp/>every<sp/>dirent<sp/>implementation<sp/>ensure<sp/>that<sp/>rewinddir<sp/>will<sp/>update</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>*<sp/>the<sp/>directory<sp/>stream<sp/>to<sp/>reflect<sp/>any<sp/>changes<sp/>made<sp/>to<sp/>the<sp/>directory<sp/>entries</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>*<sp/>since<sp/>the<sp/>previous<sp/>``opendir&apos;&apos;<sp/>or<sp/>``rewinddir&apos;&apos;<sp/>call.<sp/><sp/>Keep<sp/>an<sp/>eye<sp/>on</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>*<sp/>this<sp/>if<sp/>your<sp/>program<sp/>depends<sp/>on<sp/>the<sp/>feature.<sp/><sp/>I<sp/>know<sp/>at<sp/>least<sp/>one<sp/>dirent</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*<sp/>implementation<sp/>where<sp/>you<sp/>are<sp/>required<sp/>to<sp/>close<sp/>and<sp/>re-open<sp/>the<sp/>stream<sp/>to</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*<sp/>see<sp/>the<sp/>changes.</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>*<sp/>&lt;ret&gt;Returns<sp/>nothing.<sp/><sp/>If<sp/>something<sp/>went<sp/>wrong<sp/>while<sp/>rewinding,<sp/>you<sp/>will</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*<sp/>notice<sp/>it<sp/>later<sp/>when<sp/>you<sp/>try<sp/>to<sp/>retrieve<sp/>the<sp/>first<sp/>directory<sp/>entry.</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal">rewinddir<sp/>(DIR<sp/>*dirp)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>that<sp/>dirp<sp/>is<sp/>legal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>assert<sp/>(dirp<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirp<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>assert<sp/>(dirp-&gt;dirname<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>previous<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DIRENT_WIN32_INTERFACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirp-&gt;search_handle<sp/>!=<sp/>INVALID_HANDLE_VALUE)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FindClose<sp/>(dirp-&gt;search_handle)<sp/>==<sp/>FALSE)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unknown<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>re-open<sp/>previous<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_initdir<sp/>(dirp)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialization<sp/>failed<sp/>but<sp/>we<sp/>cannot<sp/>deal<sp/>with<sp/>error.<sp/><sp/>User<sp/>will<sp/>notice</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>error<sp/>later<sp/>when<sp/>she<sp/>tries<sp/>to<sp/>retrieve<sp/>first<sp/>directory<sp/>enty.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*EMPTY*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*<sp/>Open<sp/>native<sp/>directory<sp/>stream<sp/>object<sp/>and<sp/>retrieve<sp/>first<sp/>file.</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>*<sp/>Be<sp/>sure<sp/>to<sp/>close<sp/>previous<sp/>stream<sp/>before<sp/>opening<sp/>new<sp/>one.</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal">_initdir<sp/>(DIR<sp/>*dirp)</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>assert<sp/>(dirp<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>assert<sp/>(dirp-&gt;dirname<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>dirp-&gt;dirent_filled<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(DIRENT_WIN32_INTERFACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>stream<sp/>and<sp/>retrieve<sp/>first<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>dirp-&gt;search_handle<sp/>=<sp/>FindFirstFile<sp/>(dirp-&gt;dirname,<sp/>&amp;dirp-&gt;current.data);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirp-&gt;search_handle<sp/>==<sp/>INVALID_HANDLE_VALUE)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>something<sp/>went<sp/>wrong<sp/>but<sp/>we<sp/>don&apos;t<sp/>know<sp/>what.<sp/><sp/>GetLastError()<sp/>could</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>give<sp/>us<sp/>more<sp/>information<sp/>about<sp/>the<sp/>error,<sp/>but<sp/>then<sp/>we<sp/>should<sp/>map</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>error<sp/>code<sp/>into<sp/>errno.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOENT;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(DIRENT_MSDOS_INTERFACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dos_findfirst<sp/>(dirp-&gt;dirname,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_A_SUBDIR<sp/>|<sp/>_A_RDONLY<sp/>|<sp/>_A_ARCH<sp/>|<sp/>_A_SYSTEM<sp/>|<sp/>_A_HIDDEN,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dirp-&gt;current.data)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_dos_findfirst<sp/>and<sp/>findfirst<sp/>will<sp/>set<sp/>errno<sp/>to<sp/>ENOENT<sp/>when<sp/>no<sp/></highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>more<sp/>entries<sp/>could<sp/>be<sp/>retrieved.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>DIR<sp/>and<sp/>it&apos;s<sp/>first<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>_setdirname<sp/>(dirp);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>dirp-&gt;dirent_filled<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/>*<sp/>Return<sp/>implementation<sp/>dependent<sp/>name<sp/>of<sp/>the<sp/>current<sp/>directory<sp/>entry.</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="640"><highlight class="normal">_getdirname<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dirent<sp/>*dp)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DIRENT_WIN32_INTERFACE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dp-&gt;data.cFileName;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(DIRENT_USE_FFBLK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dp-&gt;data.ff_name;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dp-&gt;data.name;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/>*<sp/>Copy<sp/>name<sp/>of<sp/>implementation<sp/>dependent<sp/>directory<sp/>entry<sp/>to<sp/>the<sp/>d_name<sp/>field.</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal">_setdirname<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>DIR<sp/>*dirp)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>that<sp/>d_name<sp/>is<sp/>long<sp/>enough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>assert<sp/>(strlen<sp/>(_getdirname<sp/>(&amp;dirp-&gt;current))<sp/>&lt;=<sp/>NAME_MAX);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>strncpy<sp/>(dirp-&gt;current.d_name,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_getdirname<sp/>(&amp;dirp-&gt;current),</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NAME_MAX);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>dirp-&gt;current.d_name[NAME_MAX]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*char<sp/>d_name[NAME_MAX+1]*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>NAMLEN(dp)<sp/>((int)(strlen((dp)-&gt;d_name)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>error<sp/>&quot;missing<sp/>dirent<sp/>interface&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*DIRENT_H*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="dirent.h"/>
  </compounddef>
</doxygen>
