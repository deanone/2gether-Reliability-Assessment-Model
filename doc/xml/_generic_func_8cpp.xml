<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_generic_func_8cpp" kind="file" language="C++">
    <compoundname>GenericFunc.cpp</compoundname>
    <includes refid="_generic_func_8h" local="yes">GenericFunc.h</includes>
    <includes refid="dirent_8h" local="yes">dirent.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">sstream</includes>
    <incdepgraph>
      <node id="38">
        <label>GenericFunc.cpp</label>
        <link refid="_generic_func_8cpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>GenericFunc.h</label>
        <link refid="_generic_func_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>string</label>
      </node>
      <node id="43">
        <label>limits.h</label>
      </node>
      <node id="41">
        <label>dirent.h</label>
        <link refid="dirent_8h"/>
      </node>
      <node id="42">
        <label>unistd.h</label>
      </node>
      <node id="44">
        <label>sstream</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_generic_func_8h" kindref="compound">GenericFunc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dirent_8h" kindref="compound">dirent.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="namespacegnfnc_1a83d25b352dc66d2317f398c5a3c67f81" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespacegnfnc_1a83d25b352dc66d2317f398c5a3c67f81" kindref="member">gnfnc::getExecutablePath</ref>()</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>result[PATH_MAX];</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>found;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>readlink(</highlight><highlight class="stringliteral">&quot;/proc/self/exe&quot;</highlight><highlight class="normal">,<sp/>result,<sp/>PATH_MAX);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>found<sp/>=<sp/>std::string(result).find_last_of(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(std::string(result).substr(0,found)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="namespacegnfnc_1adf0284ac1df7768c93180ada79054488" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespacegnfnc_1adf0284ac1df7768c93180ada79054488" kindref="member">gnfnc::getExecutablePathAndMatchItWithFilename</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fileName)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>execPath<sp/>=<sp/><ref refid="namespacegnfnc_1a83d25b352dc66d2317f398c5a3c67f81" kindref="member">getExecutablePath</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>found<sp/>=<sp/>execPath.find_last_of(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>execPath<sp/>=<sp/>execPath.substr(0,<sp/>found);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>execPath<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fileName;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="GenericFunc.cpp"/>
  </compounddef>
</doxygen>
